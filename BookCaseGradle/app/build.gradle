/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'checkstyle'
    id "com.github.spotbugs" version "5.0.6"
    id 'jacoco'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    // https://mvnrepository.com/artifact/org.json/json
    implementation group: 'org.json', name: 'json', version: '20211205'
}

application {
    // Define the main class for the application.
    mainClass = 'org.saxion.devtools.week2.bookcase.Application'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

// Checkstyle
checkstyle {
    toolVersion '7.8.1'
    configFile file("config/checkstyle/checkstyle.xml")
}

checkstyleMain {
    source ='src/main/java'
}

checkstyleTest {
    source ='src/test/java'
}

// tasks.withType(Checkstyle) {
//     reports {
//         xml.required = false
//         html.required = true
//         html.stylesheet resources.text.fromFile('config/xsl/checkstyle-custom.xsl')
//     }
// }

//SpotBugs

// spotbugsMain {
//     reports {
//         html {
//             required = true
//             outputLocation = file("$buildDir/reports/spotbugs/main/spotbugs.html")
//             stylesheet = 'fancy-hist.xsl'
//         }
//     }
// }

// JaCoCo

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}
